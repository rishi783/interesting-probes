#include<bits/stdc++.h>
using namespace std;
#define row 3
#define col 3
struct ele 
{
 int x,y;   
};
bool isvalid(int i,int j)
{
    return(i>=0 && j>=0 && i<row && j<col);
}
bool check(ele temp)
{
    return(temp.x==-1 && temp.y==-1);
}
bool checkall(int arr[][col])
{
    for(int i=0;i<row;i++)
    {
        for(int j=0;j<col;j++) if(arr[i][j]==1) return true;
    }
    return false;
}
int rotorange(int arr[][col])
{
    queue<ele> q;
    ele temp;
    int ans=0;
    for(int i=0;i<row;i++)
    {
        for(int j=0;j<col;j++) 
        {
            if(arr[i][j]==2)
            {
                temp.x=i; 
                temp.y=j;
                q.push(temp);
            }
        }
    }
    temp.x=-1;
    temp.y=-1;
    q.push(temp);
    while(!q.empty())
    {
        bool flag=false;
        while(!check(q.front()))
        {
            temp=q.front();
            if(isvalid(temp.x+1,temp.y) && arr[temp.x+1][temp.y]==1)
            {
                if(!flag) ans++;
                flag=true;
                arr[temp.x+1][temp.y]=2;
                temp.x++;
                q.push(temp);
                temp.x--;
            }
            if(isvalid(temp.x-1,temp.y) && arr[temp.x-1][temp.y]==1)
            {
                if(!flag) ans++;
                flag=true;
                arr[temp.x-1][temp.y]=2;
                temp.x--;
                q.push(temp);
                temp.x++;
            }
            if(isvalid(temp.x,temp.y-1) && arr[temp.x][temp.y-1]==1)
            {
                if(!flag) ans++;
                flag=true;
                arr[temp.x][temp.y-1]=2;
                temp.y--;
                q.push(temp);
                temp.y++;
            }
            if(isvalid(temp.x,temp.y+1) && arr[temp.x][temp.y+1]==1)
            {
                if(!flag) ans++;
                flag=true;
                arr[temp.x][temp.y+1]=2;
                temp.y++;
                q.push(temp);
            }
            q.pop();
        }
        q.pop();
        if(!q.empty())
        {
            temp.x=-1;
            temp.y=-1;
            q.push(temp);
        }
    }
    return(checkall(arr)?-1:ans);
}
int main()
{
    int arr[row][col];
    for(int i=0;i<row;i++)
    {
        for(int j=0;j<col;j++) cin>>arr[i][j];
    }
    int ans=rotorange(arr);
    if(ans==-1)
    cout<<"All the oranges cannot be rotten";
    else
    cout<<"Time taken for all the oranges to be rotten is "<<ans<<endl;
    
    return 0;
}
